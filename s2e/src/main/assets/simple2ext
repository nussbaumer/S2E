#!/system/bin/sh

# Initialization, checks and mounts TEST
BB="busybox"
DELETE="busybox rm -rf"
S2E_CONFIG_DIR=/data/local/s2e_config/
LOGGER=/data/local/bin/s2elogger
LOGFILE=/data/local/s2e.log
FOLDERS="
/cache/download
/data/app
/data/app-asec
/data/app-lib
/data/app-private
/data/dalvik-cache
/data/data
"

extractnum() {
echo $1 | ${BB} sed 's/[^0-9]*//g'
}

getperm() {
buffer=$(${BB} stat $1 2>>/dev/null | grep -e 'Access:' -e 'Uid:' -e 'Gid:')
perm=$(extractnum $(echo $buffer | ${BB} awk '{print $2}'))
uid=$(extractnum $(echo $buffer | ${BB} awk '{print $5}'))
gid=$(extractnum $(echo $buffer | ${BB} awk '{print $9}'))
}

strippath() {
echo $1 | ${BB} awk -F'/' '{print $'$2'}'
}

if [ -e ${LOGFILE} ];
then
    ${DELETE} ${LOGFILE}
    ${BB} touch ${LOGFILE}
else
    ${BB} touch ${LOGFILE}
fi

# Initialization
${LOGGER} "Initialization..."

if [ "${SD_EXT_DIRECTORY}" = "" ];
then
    SD_EXT_DIRECTORY=/sd-ext
fi

# Checking for ext partitions
for NUM in `seq 0 9`;
do
    TYPE=`cat /sys/block/mmcblk${NUM}/device/type`
    if [ "${TYPE}" = "SD" ];
    then
        EXTPART=/dev/block/mmcblk${NUM}p2
        SD_FOUND="1"
        break
    fi
done
if [ "${SD_FOUND}" = "1" ];
then
    ${LOGGER} "Ext partition found: ${EXTPART}" lb
else
    ${LOGGER} "Ext partition not found... Exit!"
    exit
fi

if [ -e "/data/local/bin/e2fsck" ];
then
    ${LOGGER} "Use built-in e2fsck" lb
    E2FSCK="/data/local/bin/e2fsck"
else
    ${LOGGER} "Use system e2fsck" lb
    E2FSCK="e2fsck"
fi

if [ -e "${S2E_CONFIG_DIR}.read_ahead" ];
then
    ${LOGGER} "Setup read_ahead value" lb
    ${BB} cat ${S2E_CONFIG_DIR}.read_ahead > /sys/devices/virtual/bdi/179:0/read_ahead_kb
fi

${LOGGER} "Start mounting ${EXTPART} as ext4" l
if [ "`${BB} egrep -q ${SD_EXT_DIRECTORY} /proc/mounts; ${BB} echo $?`" = "0" ];
then
    ${LOGGER} "Error! ${EXTPART} is already mounted. You may see this error if you've upgraded to"
    ${LOGGER} "a new S2E revision. If you're seeing this error and S2E is not working, then another"
    ${LOGGER} "app2sd script may be conflicting with S2E. You must resolve this issue manually."
    ${LOGGER} "Script aborted."
    exit
fi
if [ ! -e ${SD_EXT_DIRECTORY} ];
then
    ${LOGGER} "${SD_EXT_DIRECTORY} not exists! Create..." l
    ${BB} mount -o remount,rw /
    ${BB} mkdir ${SD_EXT_DIRECTORY}
    ${BB} chown system:system ${SD_EXT_DIRECTORY}
    ${BB} chmod 0771 ${SD_EXT_DIRECTORY}
    ${BB} mount -o remount,ro /
fi

${LOGGER} "Checking ${EXTPART}:" l
${E2FSCK} -yf ${EXTPART} >> ${LOGFILE}

${LOGGER} "Mounting ${EXTPART}..." lb
${BB} mount -t ext4 -o nosuid,nodev ${EXTPART} ${SD_EXT_DIRECTORY}

if [ "`${BB} egrep -q ${SD_EXT_DIRECTORY} /proc/mounts; ${BB} echo $?`" != "0" ];
then
    ${LOGGER} "${EXTPART} not mounted... Exit!"
    exit
else
    ${LOGGER} "${EXTPART} successfully mounted!" lb

fi

if [ -e "/data/data/ru.krikun.s2e/shared_prefs/ru.krikun.s2e_preferences.xml" ];
then
    S2E_PREF="/data/data/ru.krikun.s2e/shared_prefs/ru.krikun.s2e_preferences.xml"
    S2E_STATUS="/data/data/ru.krikun.s2e/status"
    ${LOGGER} "Config found on /data/data" l
else
    if [ -e "${SD_EXT_DIRECTORY}/data/ru.krikun.s2e/shared_prefs/ru.krikun.s2e_preferences.xml" ];
    then
        S2E_PREF="${SD_EXT_DIRECTORY}/data/ru.krikun.s2e/shared_prefs/ru.krikun.s2e_preferences.xml"
        S2E_STATUS="${SD_EXT_DIRECTORY}/data/ru.krikun.s2e/status"
        ${LOGGER} "Config found on ${SD_EXT_DIRECTORY}/data" l
    else
        ${LOGGER} "Config not found... Exit!"
        exit
    fi
fi

if [ ! -e ${S2E_STATUS} ];
then
    ${LOGGER} "Status dir not found! Create..." lb
    ${BB} mkdir  ${S2E_STATUS}
else
    ${LOGGER} "Status dir found! Erase..." lb
    ${DELETE} ${S2E_STATUS}/*
fi

# Process folder list
for fulldir in ${FOLDERS};
do
    basedir=$(strippath ${fulldir} 2)
    dir=$(strippath ${fulldir} 3)
    getperm ${fulldir}
    CONFIG=`${BB} grep -q "name=\"${dir}\" value=\"true\"" ${S2E_PREF}; ${BB} echo $?`
    if [ "${CONFIG}" = "0" ];
    then
        if [ "`${BB} egrep -q \"/${basedir}/${dir}\" /proc/mounts; ${BB} echo $?`" != "0" ];
        then
            if [ ! -e "${SD_EXT_DIRECTORY}/${dir}" ];
            then
                ${BB} mkdir ${SD_EXT_DIRECTORY}/${dir}
            fi
            ${BB} chown $uid:$gid ${SD_EXT_DIRECTORY}/${dir}
            ${BB} chmod $perm ${SD_EXT_DIRECTORY}/${dir}
            if [ "$(ls /${basedir}/${dir})" ];
            then
                ${LOGGER} "Moving ${fulldir} to ${SD_EXT_DIRECTORY}/${dir} (perm:${perm} uid:${uid} gid:${gid})"
                ${BB} cp -a /${basedir}/${dir}/* ${SD_EXT_DIRECTORY}/${dir}
                ${DELETE} /${basedir}/${dir}/*
            fi

            ${BB} mount -o bind ${SD_EXT_DIRECTORY}/${dir}/ /${basedir}/${dir}

            if [ "`${BB} egrep -q \"/${basedir}/${dir}\" /proc/mounts; ${BB} echo $?`" = "0" ];
            then
                ${LOGGER} "${SD_EXT_DIRECTORY}/${dir} mount as /${basedir}/${dir}"
                ${BB} touch ${S2E_STATUS}/${dir}
            else
                ${LOGGER} "${SD_EXT_DIRECTORY}/${dir} not mount..."
            fi
        else
            ${LOGGER} "${SD_EXT_DIRECTORY}/${dir} already mount..."
        fi
    else
        if [ -e "${SD_EXT_DIRECTORY}/${dir}" ];
        then
            if [ "$(ls ${SD_EXT_DIRECTORY}/${dir})" ];
            then
                ${LOGGER} "Moving ${SD_EXT_DIRECTORY}/${dir} to ${fulldir} (perm:${perm} uid:${uid} gid:${gid})"
                ${BB} cp -a ${SD_EXT_DIRECTORY}/${dir}/* /${basedir}/${dir}/
                ${DELETE} ${SD_EXT_DIRECTORY}/${dir}
            else
                ${DELETE} ${SD_EXT_DIRECTORY}/${dir}
            fi
            if [ "${fulldir}" == "/data/data" ] && [ -e "/${basedir}/${dir}/ru.krikun.s2e/shared_prefs/ru.krikun.s2e_preferences.xml" ];
            then
                S2E_PREF="/${basedir}/${dir}/ru.krikun.s2e/shared_prefs/ru.krikun.s2e_preferences.xml"
                S2E_STATUS="/${basedir}/${dir}/ru.krikun.s2e/status"
                ${LOGGER} "Config now on /${basedir}/${dir}"
            fi
        fi
    fi
done

# Finish
${LOGGER} "Done!" s
